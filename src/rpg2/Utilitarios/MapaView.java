/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rpg2.Utilitarios;

import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import rpg2.Sistema.Creditos;
import rpg2.Imagens.Imagens;
import rpg2.Sistema.Tela;

/**
 *
 * @author M4ESTRO
 */
public class MapaView extends javax.swing.JFrame {

    LegendasView legendas = new LegendasView();
    private ImageIcon gridAtual, gridOriginal;

    public static void acessoConteudo(boolean autenticador) {
        ImageIcon imagem = null;
        if (autenticador) {
            jLabelImagemInfernoDor.setIcon(imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Mapas/Inferno da dor.png")));
            jLabelImagemInfernoSolidao.setIcon(imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Mapas/Inferno da solidao.png")));
            jLabelImagemLab.setIcon(imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Mapas/Laboratorio geral da Unreal.png")));
        } else {
            jLabelImagemInfernoDor.setIcon(imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Mapas/bloqueio.png")));
            jLabelImagemInfernoSolidao.setIcon(imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Mapas/bloqueio.png")));
            jLabelImagemLab.setIcon(imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Mapas/bloqueio.png")));
        }

    }

    /**
     * Creates new form MapaView
     */
    public MapaView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelMapaCompleto = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jToggleButtonAlternar = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabelImagemMapaCompleto = new javax.swing.JLabel();
        jPanelMapaLuisidiana = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLabelImagemLuisidiana = new javax.swing.JLabel();
        jPanelMapaZonaFlorestal = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jLabelImagemZonaFlorestal = new javax.swing.JLabel();
        jPanelMapaKranch = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jLabelImagemKranch = new javax.swing.JLabel();
        jPanelLaboratorio = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jLabelImagemLab = new javax.swing.JLabel();
        jPanelInfernoDor = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jLabelImagemInfernoDor = new javax.swing.JLabel();
        jPanelInfernoSolidao = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jLabelImagemInfernoSolidao = new javax.swing.JLabel();
        jPanelUniversos = new javax.swing.JPanel();
        jScrollPaneUniverso = new javax.swing.JScrollPane();
        jLabelUniversos = new javax.swing.JLabel();
        jComboBoxUniverso = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jPanelGrids = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxGridMapa = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxGridLocal = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxGridsOpcao = new javax.swing.JComboBox<>();
        jButtonImgOrig = new javax.swing.JButton();
        jButtonImgPadrao = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPaneImgGrid = new javax.swing.JScrollPane();
        jLabelGridImagem = new javax.swing.JLabel();
        jScrollPaneMiniatura = new javax.swing.JScrollPane();
        jLabelMiniatura = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuVoltar = new javax.swing.JMenu();
        jMenuLegendas = new javax.swing.JMenu();
        jMenuLuisidiana = new javax.swing.JMenu();
        jMenuZonaFlorestal = new javax.swing.JMenu();
        jMenuKranch = new javax.swing.JMenu();
        jMenuInfernoDor = new javax.swing.JMenu();
        jMenuInfernoSolidao = new javax.swing.JMenu();
        jMenuLaboratorio = new javax.swing.JMenu();
        jMenuSecundaria = new javax.swing.JMenu();
        jMenuCreditos = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("UTILITÁRIOS - MAPAS");
        setIconImage(Imagens.getIconeTela(5));
        setMinimumSize(Tela.telaFull());

        jLabel1.setBackground(new java.awt.Color(255, 0, 0));
        jLabel1.setFont(new java.awt.Font("Meiryo UI", 1, 14)); // NOI18N
        jLabel1.setText("Alternar o mapa: ");

        jToggleButtonAlternar.setText("Original");
        jToggleButtonAlternar.setToolTipText("Clique para alternar para o mapa com divisórias");
        jToggleButtonAlternar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonAlternarActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(255, 0, 0));
        jScrollPane1.setBorder(null);

        jLabelImagemMapaCompleto.setBackground(new java.awt.Color(255, 255, 255));
        jLabelImagemMapaCompleto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelImagemMapaCompleto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rpg2/Imagens/Mapas/Mapa completo.png"))); // NOI18N
        jScrollPane1.setViewportView(jLabelImagemMapaCompleto);

        javax.swing.GroupLayout jPanelMapaCompletoLayout = new javax.swing.GroupLayout(jPanelMapaCompleto);
        jPanelMapaCompleto.setLayout(jPanelMapaCompletoLayout);
        jPanelMapaCompletoLayout.setHorizontalGroup(
            jPanelMapaCompletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMapaCompletoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMapaCompletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1246, Short.MAX_VALUE)
                    .addGroup(jPanelMapaCompletoLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jToggleButtonAlternar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelMapaCompletoLayout.setVerticalGroup(
            jPanelMapaCompletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMapaCompletoLayout.createSequentialGroup()
                .addGroup(jPanelMapaCompletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMapaCompletoLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel1))
                    .addGroup(jPanelMapaCompletoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jToggleButtonAlternar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Mapa Completo", jPanelMapaCompleto);

        jScrollPane2.setBorder(null);

        jLabelImagemLuisidiana.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelImagemLuisidiana.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rpg2/Imagens/Mapas/Luisidiana 1.0.png"))); // NOI18N
        jScrollPane2.setViewportView(jLabelImagemLuisidiana);

        javax.swing.GroupLayout jPanelMapaLuisidianaLayout = new javax.swing.GroupLayout(jPanelMapaLuisidiana);
        jPanelMapaLuisidiana.setLayout(jPanelMapaLuisidianaLayout);
        jPanelMapaLuisidianaLayout.setHorizontalGroup(
            jPanelMapaLuisidianaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMapaLuisidianaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1246, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelMapaLuisidianaLayout.setVerticalGroup(
            jPanelMapaLuisidianaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMapaLuisidianaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Mapa de Luisidiana", jPanelMapaLuisidiana);

        jScrollPane3.setBorder(null);

        jLabelImagemZonaFlorestal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelImagemZonaFlorestal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rpg2/Imagens/Mapas/Zona florestal 1.0.png"))); // NOI18N
        jScrollPane3.setViewportView(jLabelImagemZonaFlorestal);

        javax.swing.GroupLayout jPanelMapaZonaFlorestalLayout = new javax.swing.GroupLayout(jPanelMapaZonaFlorestal);
        jPanelMapaZonaFlorestal.setLayout(jPanelMapaZonaFlorestalLayout);
        jPanelMapaZonaFlorestalLayout.setHorizontalGroup(
            jPanelMapaZonaFlorestalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMapaZonaFlorestalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1246, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelMapaZonaFlorestalLayout.setVerticalGroup(
            jPanelMapaZonaFlorestalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMapaZonaFlorestalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Mapa da Zona Florestal", jPanelMapaZonaFlorestal);

        jScrollPane4.setBorder(null);

        jLabelImagemKranch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelImagemKranch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rpg2/Imagens/Mapas/Kranch 1.0.png"))); // NOI18N
        jScrollPane4.setViewportView(jLabelImagemKranch);

        javax.swing.GroupLayout jPanelMapaKranchLayout = new javax.swing.GroupLayout(jPanelMapaKranch);
        jPanelMapaKranch.setLayout(jPanelMapaKranchLayout);
        jPanelMapaKranchLayout.setHorizontalGroup(
            jPanelMapaKranchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMapaKranchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1246, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelMapaKranchLayout.setVerticalGroup(
            jPanelMapaKranchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMapaKranchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Mapa de Kranch", jPanelMapaKranch);

        jLabelImagemLab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelImagemLab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rpg2/Imagens/Mapas/bloqueio.png"))); // NOI18N
        jLabelImagemLab.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jScrollPane5.setViewportView(jLabelImagemLab);

        javax.swing.GroupLayout jPanelLaboratorioLayout = new javax.swing.GroupLayout(jPanelLaboratorio);
        jPanelLaboratorio.setLayout(jPanelLaboratorioLayout);
        jPanelLaboratorioLayout.setHorizontalGroup(
            jPanelLaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLaboratorioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1246, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelLaboratorioLayout.setVerticalGroup(
            jPanelLaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLaboratorioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Laboratório Geral da Unreal", jPanelLaboratorio);

        jLabelImagemInfernoDor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelImagemInfernoDor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rpg2/Imagens/Mapas/bloqueio.png"))); // NOI18N
        jScrollPane6.setViewportView(jLabelImagemInfernoDor);

        javax.swing.GroupLayout jPanelInfernoDorLayout = new javax.swing.GroupLayout(jPanelInfernoDor);
        jPanelInfernoDor.setLayout(jPanelInfernoDorLayout);
        jPanelInfernoDorLayout.setHorizontalGroup(
            jPanelInfernoDorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInfernoDorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 1246, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelInfernoDorLayout.setVerticalGroup(
            jPanelInfernoDorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInfernoDorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Inferno da Dor", jPanelInfernoDor);

        jLabelImagemInfernoSolidao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelImagemInfernoSolidao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rpg2/Imagens/Mapas/bloqueio.png"))); // NOI18N
        jScrollPane7.setViewportView(jLabelImagemInfernoSolidao);

        javax.swing.GroupLayout jPanelInfernoSolidaoLayout = new javax.swing.GroupLayout(jPanelInfernoSolidao);
        jPanelInfernoSolidao.setLayout(jPanelInfernoSolidaoLayout);
        jPanelInfernoSolidaoLayout.setHorizontalGroup(
            jPanelInfernoSolidaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInfernoSolidaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 1246, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelInfernoSolidaoLayout.setVerticalGroup(
            jPanelInfernoSolidaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInfernoSolidaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Inferno da Solidão", jPanelInfernoSolidao);

        jLabelUniversos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rpg2/Imagens/Universos/Egito/Egito.jpg"))); // NOI18N
        jScrollPaneUniverso.setViewportView(jLabelUniversos);

        jComboBoxUniverso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Egito", "Grécia", "WWII" }));
        jComboBoxUniverso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxUniversoActionPerformed(evt);
            }
        });

        jLabel6.setText("Selecione o universo: ");

        javax.swing.GroupLayout jPanelUniversosLayout = new javax.swing.GroupLayout(jPanelUniversos);
        jPanelUniversos.setLayout(jPanelUniversosLayout);
        jPanelUniversosLayout.setHorizontalGroup(
            jPanelUniversosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelUniversosLayout.createSequentialGroup()
                .addGroup(jPanelUniversosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneUniverso, javax.swing.GroupLayout.DEFAULT_SIZE, 1256, Short.MAX_VALUE)
                    .addGroup(jPanelUniversosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxUniverso, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelUniversosLayout.setVerticalGroup(
            jPanelUniversosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelUniversosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelUniversosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBoxUniverso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPaneUniverso, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Universos Alternativos", jPanelUniversos);

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("Selecione um mapa: ");

        jComboBoxGridMapa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um mapa", "Luisidiana", "Zona Florestal", "Kranch", "Laboratório Geral da Unreal", "Inferno da dor", "Inferno da Solidão", "Universos Alternativos" }));
        jComboBoxGridMapa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxGridMapaActionPerformed(evt);
            }
        });

        jLabel3.setText("Selecione o local: ");

        jComboBoxGridLocal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um mapa primeiro" }));
        jComboBoxGridLocal.setEnabled(false);
        jComboBoxGridLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxGridLocalActionPerformed(evt);
            }
        });

        jLabel4.setText("Opções: ");

        jComboBoxGridsOpcao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione o local primeiro" }));
        jComboBoxGridsOpcao.setEnabled(false);
        jComboBoxGridsOpcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxGridsOpcaoActionPerformed(evt);
            }
        });

        jButtonImgOrig.setText("Original");
        jButtonImgOrig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImgOrigActionPerformed(evt);
            }
        });

        jButtonImgPadrao.setText("Padrão");
        jButtonImgPadrao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImgPadraoActionPerformed(evt);
            }
        });

        jLabel5.setText("Tamanho da imagem");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxGridMapa, 0, 292, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxGridLocal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxGridsOpcao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonImgPadrao)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonImgOrig)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxGridMapa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxGridLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBoxGridsOpcao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonImgOrig)
                    .addComponent(jButtonImgPadrao)
                    .addComponent(jLabel5))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jScrollPaneImgGrid.setViewportView(jLabelGridImagem);

        jScrollPaneMiniatura.setViewportView(jLabelMiniatura);

        javax.swing.GroupLayout jPanelGridsLayout = new javax.swing.GroupLayout(jPanelGrids);
        jPanelGrids.setLayout(jPanelGridsLayout);
        jPanelGridsLayout.setHorizontalGroup(
            jPanelGridsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGridsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelGridsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPaneMiniatura, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPaneImgGrid, javax.swing.GroupLayout.DEFAULT_SIZE, 808, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelGridsLayout.setVerticalGroup(
            jPanelGridsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGridsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelGridsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneImgGrid)
                    .addGroup(jPanelGridsLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 280, Short.MAX_VALUE)
                        .addComponent(jScrollPaneMiniatura, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("GRIDS", jPanelGrids);

        jMenuVoltar.setText("Voltar ao jogo");
        jMenuVoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuVoltarMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuVoltar);

        jMenuLegendas.setText("Legendas");
        jMenuLegendas.setToolTipText("Veja as legendas dos mapas");

        jMenuLuisidiana.setText("Luisidiana");
        jMenuLuisidiana.setToolTipText("Legenda do mapa de Luisidiana");
        jMenuLuisidiana.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuLuisidianaMouseClicked(evt);
            }
        });
        jMenuLegendas.add(jMenuLuisidiana);

        jMenuZonaFlorestal.setText("Zona Florestal");
        jMenuZonaFlorestal.setToolTipText("Legenda do mapa da Zona Florestal");
        jMenuZonaFlorestal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuZonaFlorestalMouseClicked(evt);
            }
        });
        jMenuLegendas.add(jMenuZonaFlorestal);

        jMenuKranch.setText("Kranch");
        jMenuKranch.setToolTipText("Legenda do mapa de Kranch");
        jMenuKranch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuKranchMouseClicked(evt);
            }
        });
        jMenuLegendas.add(jMenuKranch);

        jMenuInfernoDor.setText("Inferno da Dor");
        jMenuInfernoDor.setToolTipText("Legenda do mapa dos Infernos");
        jMenuInfernoDor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuInfernoDorMouseClicked(evt);
            }
        });
        jMenuLegendas.add(jMenuInfernoDor);

        jMenuInfernoSolidao.setText("Inferno da Solidão");
        jMenuInfernoSolidao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuInfernoSolidaoMouseClicked(evt);
            }
        });
        jMenuLegendas.add(jMenuInfernoSolidao);

        jMenuLaboratorio.setText("Laboratório Geral da Unreal");
        jMenuLaboratorio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuLaboratorioMouseClicked(evt);
            }
        });
        jMenuLegendas.add(jMenuLaboratorio);

        jMenuSecundaria.setText("Atividades secundárias");
        jMenuSecundaria.setToolTipText("Legenda das atividades secundárias");
        jMenuSecundaria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuSecundariaMouseClicked(evt);
            }
        });
        jMenuLegendas.add(jMenuSecundaria);

        jMenuBar1.add(jMenuLegendas);

        jMenuCreditos.setText("Creditos");
        jMenuCreditos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuCreditosMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuCreditos);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButtonAlternarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonAlternarActionPerformed
        Mapa.trocaImagem(jToggleButtonAlternar.isSelected(), jLabelImagemMapaCompleto, jToggleButtonAlternar);
    }//GEN-LAST:event_jToggleButtonAlternarActionPerformed

    private void jMenuSecundariaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuSecundariaMouseClicked
        legendas.mudaImagem(7);
        legendas.setEnabled(true);
        legendas.setVisible(true);
        legendas.toFront();
    }//GEN-LAST:event_jMenuSecundariaMouseClicked

    private void jMenuLuisidianaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuLuisidianaMouseClicked
        legendas.mudaImagem(1);
        legendas.setEnabled(true);
        legendas.setVisible(true);
        legendas.toFront();
    }//GEN-LAST:event_jMenuLuisidianaMouseClicked

    private void jMenuCreditosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuCreditosMouseClicked
        Creditos.creditos();
    }//GEN-LAST:event_jMenuCreditosMouseClicked

    private void jMenuVoltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuVoltarMouseClicked
        this.dispose();
    }//GEN-LAST:event_jMenuVoltarMouseClicked

    private void jMenuInfernoDorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuInfernoDorMouseClicked
        legendas.mudaImagem(4);
        legendas.setEnabled(true);
        legendas.setVisible(true);
        legendas.toFront();
    }//GEN-LAST:event_jMenuInfernoDorMouseClicked

    private void jMenuInfernoSolidaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuInfernoSolidaoMouseClicked
        legendas.mudaImagem(5);
        legendas.setEnabled(true);
        legendas.setVisible(true);
        legendas.toFront();
    }//GEN-LAST:event_jMenuInfernoSolidaoMouseClicked

    private void jMenuLaboratorioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuLaboratorioMouseClicked
        legendas.mudaImagem(6);
        legendas.setEnabled(true);
        legendas.setVisible(true);
        legendas.toFront();
    }//GEN-LAST:event_jMenuLaboratorioMouseClicked

    private void jMenuZonaFlorestalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuZonaFlorestalMouseClicked
        legendas.mudaImagem(2);
        legendas.setEnabled(true);
        legendas.setVisible(true);
        legendas.toFront();
    }//GEN-LAST:event_jMenuZonaFlorestalMouseClicked

    private void jMenuKranchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuKranchMouseClicked
        legendas.mudaImagem(3);
        legendas.setEnabled(true);
        legendas.setVisible(true);
        legendas.toFront();
    }//GEN-LAST:event_jMenuKranchMouseClicked

    private void jComboBoxGridMapaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxGridMapaActionPerformed
        Integer opcao = jComboBoxGridMapa.getSelectedIndex();
        jComboBoxGridLocal.setEnabled(true);

        switch (opcao) {
            case 1:// Luisidiana
                jComboBoxGridLocal.setModel(new DefaultComboBoxModel<>(getLocais(opcao)));
                break;

            case 2:// Zona Florestal
                jComboBoxGridLocal.setModel(new DefaultComboBoxModel<>(getLocais(opcao)));
                break;

            case 3:// Kranch
                jComboBoxGridLocal.setModel(new DefaultComboBoxModel<>(getLocais(opcao)));
                break;

            case 4:// Laboratório Geral da Unreal
                jComboBoxGridLocal.setModel(new DefaultComboBoxModel<>(getLocais(opcao)));
                break;

            case 5:// Inferno da dor
                jComboBoxGridLocal.setModel(new DefaultComboBoxModel<>(getLocais(opcao)));
                break;

            case 6:// Inferno da Solidão
                jComboBoxGridLocal.setModel(new DefaultComboBoxModel<>(getLocais(opcao)));
                break;

            case 7:// Universos Alternativos
                jComboBoxGridLocal.setModel(new DefaultComboBoxModel<>(getLocais(opcao)));
                break;

            default://Selecione
                jComboBoxGridLocal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Selecione um mapa primeiro"}));
                jComboBoxGridLocal.setSelectedIndex(0);
                jComboBoxGridLocal.setEnabled(false);
                break;
        }
    }//GEN-LAST:event_jComboBoxGridMapaActionPerformed

    private void jComboBoxGridLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxGridLocalActionPerformed
        String local = jComboBoxGridLocal.getSelectedItem().toString();
        jComboBoxGridsOpcao.setEnabled(true);
        switch (local) {
            //<editor-fold defaultstate="collapsed" desc=" LUISIDIANA ">
            case "Cemiterio corvo":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Corvo 01", "Corvo 02"}));
                setImagemLuisidiana(1);
                break;

            case "Conjunto habitacional":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Conjunto habitacional"}));
                setImagemLuisidiana(11);

                break;

            case "Especiais":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Esgoto", "Subterrâneo"}));
                setImagemLuisidiana(12);

                break;

            case "Hospicio":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Hospicio 1", "Hospicio 2", "Hospicio 3", "Hospicio 4"}));
                setImagemLuisidiana(14);
                break;

            case "Igreja nova vida":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Nova vida"}));
                setImagemLuisidiana(18);
                break;

            case "Lab Avancado":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Nova vida - subterrâneo", "Rio das lagrimas"}));
                setImagemLuisidiana(19);
                break;

            case "Ponto zero":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Ponto zero"}));
                setImagemLuisidiana(27);
                break;

            case "Predio geral da Unreal":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Lab subterraneo"}));
                setImagemLuisidiana(28);
                break;

            case "Roma":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Roma", "Batalha por Roma"}));
                setImagemLuisidiana(35);
                break;

            case "Vila boa morada":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Vila 1", "Vila 2"}));
                setImagemLuisidiana(47);
                break;

            case "Cemiterios e igrejas":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Cemi 1", "Cemi 2"}));
                setImagemLuisidiana(3);
                break;

            case "Cidade":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Ruas 1", "Ruas 2", "Ruas 3", "Ruas 4", "Ruas 5", "Ruas 6"}));
                setImagemLuisidiana(5);
                break;

            case "Lojas":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Diner 1", "Diner 2", "Gas 1", "Junktown", "Zawa"}));
                setImagemLuisidiana(21);
                break;

            case "Predios e casas":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Taverna Urbana 2", "Ware house 1", "Ware house 2",
                    "Ware house 3", "Ware house 4"}));
                setImagemLuisidiana(29);
                break;

            case "Luisidiana - S26":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Hospital 1", "Hospital 2", "Hospital 3"}));
                setImagemLuisidiana(36);
                break;

            case "Luisidiana - S28":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"S28_1", "S28_2", "S28_3", "S28_4"}));
                setImagemLuisidiana(39);
                break;

            case "Luisidiana - S29":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Industrial yard 1", "Industrial yard 2", "Industrial yard 3",
                    "Industrial yard 4"}));
                setImagemLuisidiana(43);
                break;

            //</editor-fold>
            //<editor-fold defaultstate="collapsed" desc=" Zona Florestal ">
            case "Bocejo":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Bocejo 01", "Bocejo 02", "Bocejo 03"}));
                setImagemFloresta(1);
                break;

            case "Caverna do pensador":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Caverna do pensador"}));
                setImagemFloresta(4);
                break;//ZF - Lab norte, ZF - Lab sul

            case "Lab norte":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"ZF - Lab norte"}));
                setImagemFloresta(5);
                break;

            case "Lab sul":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"ZF - Lab sul"}));
                setImagemFloresta(6);
                break;

            case "Outros - Zona Florestal":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"ZF - 01", "ZF - 02", "ZF - 03", "ZF - 04", "ZF - 05", "ZF - 06", "ZF - 07"}));
                setImagemFloresta(7);
                break;

            case "S14":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"S14"}));
                setImagemFloresta(14);
                break;

            //</editor-fold>
            //<editor-fold defaultstate="collapsed" desc=" Kranch ">
            case "A caverna":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"a caverna 01", "a caverna 02"}));
                setImagemKrunch(1);
                break;

            case "BHC":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"BHC"}));
                setImagemKrunch(3);
                break;

            case "Centro urbano":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Kranch"}));
                setImagemKrunch(4);
                break;

            case "Circo do The Clown":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"circo", "circo prisao"}));
                setImagemKrunch(5);
                break;

            case "Fazenda dos Sacrificios":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"fazenda sacrificios"}));
                setImagemKrunch(7);
                break;

            case "Fortaleza Grey":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"FG 01", "FG 02", "FG 03", "FG 04"}));
                setImagemKrunch(8);
                break;

            case "Montanha Elevate":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"montanha", "Reanimador Fight"}));
                setImagemKrunch(12);
                break;

            case "Outros - Kranch":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Kranch - Outros 01", "Kranch - Outros 02"}));
                setImagemKrunch(14);
                break;

            case "Rancho cultistas":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"rancho dos cultistas"}));
                setImagemKrunch(16);
                break;

            case "Kranch - S22":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"S22_1", "S22_2"}));
                setImagemKrunch(17);
                break;

            case "Kranch - S23":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"S23"}));
                setImagemKrunch(19);
                break;

            case "Kranch - S24":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"S24_1", "S24_2", "S24_3", "S24_4"}));
                setImagemKrunch(20);
                break;

            //</editor-fold>
            //<editor-fold defaultstate="collapsed" desc=" Lab Geral da Unreal ">
            case "C de comunicacao":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"comunicacao"}));
                setImagemLab(1);
                break;

            case "C de pesquisa":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"pesquisa"}));
                setImagemLab(2);
                break;

            case "C de seguranca":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"seguranca 01", "seguranca 02"}));
                setImagemLab(3);
                break;

            case "Cultismo":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"custismo"}));
                setImagemLab(5);
                break;
            //</editor-fold>
            //<editor-fold defaultstate="collapsed" desc=" Inferno da dor ">
            //"Casa da tortura", "Lar do barao", "Outros - Inferno da Dor", "Predio do sofrimento", "Inferno da dor - S20", "Vale das chamas"
            case "Casa da tortura":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Casa da tortura"}));
                setImagemInfernoDor(1);
                break;

            case "Lar do barao":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Lar do barao"}));
                setImagemInfernoDor(2);
                break;

            case "Outros - Inferno da Dor":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"ID - dor"}));
                setImagemInfernoDor(3);
                break;

            case "Predio do sofrimento":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Predio do sofrimento"}));
                setImagemInfernoDor(4);
                break;

            case "Inferno da dor - S20":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"S20"}));
                setImagemInfernoDor(5);
                break;

            case "Vale das chamas":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Vale das chamas"}));
                setImagemInfernoDor(6);
                break;

            //</editor-fold>
            //<editor-fold defaultstate="collapsed" desc=" Inferno da solidao ">
            case "Abismo Horizontal":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"abismo horizontal"}));
                setImagemInfernoSolidao(1);
                break;

            case "Casa da Perdicao":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"casa da perdicao"}));
                setImagemInfernoSolidao(2);
                break;

            case "Vale das Sombras":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"vale das sombras 01", "vale das sombras 02"}));
                setImagemInfernoSolidao(5);
                break;

            case "Outros - Inferno da Solidão":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"IS - outros 01", "IS - outros 02"}));
                setImagemInfernoSolidao(3);
                break;

            //</editor-fold>
            //<editor-fold defaultstate="collapsed" desc=" universos ">
            case "Egito":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Egito", "Egito 01", "Egito 02"}));
                setImagemUniversos(1);
                break;

            case "Grécia":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Grécia", "Grécia 01", "Grécia 02", "Grécia 03"}));
                setImagemUniversos(4);
                break;

            case "WWII":
                jComboBoxGridsOpcao.setModel(new DefaultComboBoxModel<>(new String[]{"Alemanha", "WW2_01", "WW2_02", "WW2_03"}));
                setImagemUniversos(8);
                break;
            //</editor-fold>

            default:
                jComboBoxGridsOpcao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Selecione um mapa primeiro"}));
                jComboBoxGridsOpcao.setSelectedIndex(0);
                jComboBoxGridsOpcao.setEnabled(false);
                break;
        }

    }//GEN-LAST:event_jComboBoxGridLocalActionPerformed

    private void jComboBoxGridsOpcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxGridsOpcaoActionPerformed
        String opcao = jComboBoxGridsOpcao.getSelectedItem().toString();
        String mapa = jComboBoxGridMapa.getSelectedItem().toString();

        switch (mapa) {
            case "Luisidiana":
                setLocaisLuisidiana(opcao);
                break;

            case "Zona Florestal":
                setLocaisFloresta(opcao);
                break;

            case "Kranch":
                setLocaisKranch(opcao);
                break;

            case "Laboratório Geral da Unreal":
                setLocaisLaboratorio(opcao);
                break;

            case "Universos Alternativos":
                setLocaisUniversos(opcao);
                break;

            case "Inferno da dor":
                setLocaisInfernoDor(opcao);
                break;

            case "Inferno da Solidão":
                setLocaisInfernoSolidao(opcao);
                break;
        }


    }//GEN-LAST:event_jComboBoxGridsOpcaoActionPerformed

    private void setLocaisLuisidiana(String opcao) {
        switch (opcao) {
            case "Corvo 01":
                setImagemLuisidiana(1);
                break;

            case "Corvo 02":
                setImagemLuisidiana(2);
                break;

            case "Esgoto":
                setImagemLuisidiana(12);
                break;

            case "Subterrâneo":
                setImagemLuisidiana(13);
                break;

            case "Hospicio 1":
                setImagemLuisidiana(14);
                break;

            case "Hospicio 2":
                setImagemLuisidiana(15);
                break;

            case "Hospicio 3":
                setImagemLuisidiana(16);
                break;

            case "Hospicio 4":
                setImagemLuisidiana(17);
                break;

            case "Nova vida - subterrâneo":
                setImagemLuisidiana(19);
                break;

            case "Rio das lagrimas":
                setImagemLuisidiana(20);
                break;

            case "Lab subterraneo":
                setImagemLuisidiana(28);
                break;

            case "Roma":
                setImagemLuisidiana(35);
                break;

            case "Batalha por Roma":
                setImagemLuisidiana(34);
                break;

            case "Vila 1":
                setImagemLuisidiana(47);
                break;

            case "Vila 2":
                setImagemLuisidiana(48);
                break;

            case "Cemi 1":
                setImagemLuisidiana(3);
                break;

            case "Cemi 2":
                setImagemLuisidiana(4);
                break;

            case "Ruas 1":
                setImagemLuisidiana(5);
                break;

            case "Ruas 2":
                setImagemLuisidiana(6);
                break;

            case "Ruas 3":
                setImagemLuisidiana(7);
                break;

            case "Ruas 4":
                setImagemLuisidiana(8);
                break;

            case "Ruas 5":
                setImagemLuisidiana(9);
                break;

            case "Ruas 6":
                setImagemLuisidiana(10);
                break;

            case "Diner 1":
                setImagemLuisidiana(21);
                break;

            case "Diner 2":
                setImagemLuisidiana(22);
                break;

            case "Gas 1":
                setImagemLuisidiana(23);
                break;

            case "Junktown":
                setImagemLuisidiana(24);
                break;

            case "Zawa":
                setImagemLuisidiana(25);
                break;

            case "Taverna Urbana 2":
                setImagemLuisidiana(29);
                break;

            case "Ware house 1":
                setImagemLuisidiana(30);
                break;

            case "Ware house 2":
                setImagemLuisidiana(31);
                break;

            case "Ware house 3":
                setImagemLuisidiana(32);
                break;

            case "Ware house 4":
                setImagemLuisidiana(33);
                break;

            case "Hospital 1":
                setImagemLuisidiana(36);
                break;

            case "Hospital 2":
                setImagemLuisidiana(37);
                break;

            case "Hospital 3":
                setImagemLuisidiana(38);
                break;

            case "Industrial yard 1":
                setImagemLuisidiana(43);
                break;

            case "Industrial yard 2":
                setImagemLuisidiana(44);
                break;

            case "Industrial yard 3":
                setImagemLuisidiana(45);
                break;

            case "Industrial yard 4":
                setImagemLuisidiana(46);
                break;

            case "S28_1":
                setImagemLuisidiana(39);

            case "S28_2":
                setImagemLuisidiana(40);

            case "S28_3":
                setImagemLuisidiana(41);

            case "S28_4":
                setImagemLuisidiana(42);

            default:
                setImagemLuisidiana(0);
                break;

        }
    }

    private void setLocaisFloresta(String opcao) {
        switch (opcao) {
            case "Bocejo 01":
                setImagemFloresta(1);
                break;

            case "Bocejo 02":
                setImagemFloresta(2);
                break;

            case "Bocejo 03":
                setImagemFloresta(3);
                break;

            case "Caverna do pensador":
                setImagemFloresta(4);
                break;

            case "ZF - Lab norte":
                setImagemFloresta(5);
                break;

            case "ZF - Lab sul":
                setImagemFloresta(6);
                break;

            case "ZF - 01":
                setImagemFloresta(7);
                break;

            case "ZF - 02":
                setImagemFloresta(8);
                break;

            case "ZF - 03":
                setImagemFloresta(9);
                break;

            case "ZF - 04":
                setImagemFloresta(10);
                break;

            case "ZF - 05":
                setImagemFloresta(11);
                break;

            case "ZF - 06":
                setImagemFloresta(12);
                break;

            case "ZF - 07":
                setImagemFloresta(13);
                break;

            case "S14":
                setImagemFloresta(14);
                break;
            default:
                setImagemFloresta(0);
                break;

        }
    }

    private void setLocaisUniversos(String opcao) {
        switch (opcao) {
            case "Egito":
                setImagemUniversos(1);
                break;

            case "Egito 01":
                setImagemUniversos(2);
                break;

            case "Egito 02":
                setImagemUniversos(3);
                break;

            case "Grécia":
                setImagemUniversos(4);
                break;

            case "Grécia 01":
                setImagemUniversos(5);
                break;

            case "Grécia 02":
                setImagemUniversos(6);
                break;

            case "Grécia 03":
                setImagemUniversos(7);
                break;

            case "Alemanha":
                setImagemUniversos(8);
                break;

            case "WW2_01":
                setImagemUniversos(9);
                break;

            case "WW2_02":
                setImagemUniversos(10);
                break;

            case "WW2_03":
                setImagemUniversos(11);
                break;

            default:
                setImagemUniversos(0);
                break;
        }
    }

    private void setLocaisInfernoDor(String opcao) {
        switch (opcao) {

            case "Casa da tortura":
                setImagemInfernoDor(1);
                break;

            case "Lar do barao":
                setImagemInfernoDor(2);
                break;

            case "ID - dor":
                setImagemInfernoDor(3);
                break;

            case "Predio do sofrimento":
                setImagemInfernoDor(4);
                break;

            case "S20":
                setImagemInfernoDor(5);
                break;

            case "Vale das chamas":
                setImagemInfernoDor(6);
                break;
            default:
                setImagemInfernoDor(0);
                break;
        }
    }

    private void setLocaisInfernoSolidao(String opcao) {
        switch (opcao) {
////"abismo horizontal", "casa da perdicao", "vale das sombras 01", "vale das sombras 01", "IS - outros 01", "IS - outros 02"
            case "abismo horizontal":
                setImagemInfernoSolidao(1);
                break;

            case "casa da perdicao":
                setImagemInfernoSolidao(2);
                break;

            case "vale das sombras 01":
                setImagemInfernoSolidao(5);
                break;

            case "vale das sombras 02":
                setImagemInfernoSolidao(6);
                break;

            case "IS - outros 01":
                setImagemInfernoSolidao(3);
                break;

            case "IS - outros 02":
                setImagemInfernoSolidao(4);
                break;

            default:
                setImagemInfernoDor(0);
                break;
        }
    }

    private void setLocaisKranch(String opcao) {
        switch (opcao) {

            case "a caverna 01":
                setImagemKrunch(1);
                break;

            case "a caverna 02":
                setImagemKrunch(2);
                break;

            case "BHC":
                setImagemKrunch(3);
                break;

            case "Kranch":
                setImagemKrunch(4);
                break;

            case "circo":
                setImagemKrunch(5);
                break;

            case "circo prisao":
                setImagemKrunch(6);
                break;

            case "fazenda sacrificios":
                setImagemKrunch(7);

            case "FG 01":
                setImagemKrunch(8);
                break;

            case "FG 02":
                setImagemKrunch(9);
                break;

            case "FG 03":
                setImagemKrunch(10);
                break;

            case "FG 04":
                setImagemKrunch(11);
                break;

            case "montanha":
                setImagemKrunch(12);
                break;

            case "Reanimador Fight":
                setImagemKrunch(13);
                break;

            case "Kranch - Outros 01":
                setImagemKrunch(14);
                break;

            case "Kranch - Outros 02":
                setImagemKrunch(15);
                break;

            case "rancho dos cultistas":
                setImagemKrunch(16);
                break;

            case "S22_1":
                setImagemKrunch(17);
                break;

            case "S22_2":
                setImagemKrunch(18);
                break;

            case "S23":
                setImagemKrunch(19);
                break;

            case "S24_1":
                setImagemKrunch(20);
                break;

            case "S24_2":
                setImagemKrunch(21);
                break;

            case "S24_3":
                setImagemKrunch(22);
                break;

            case "S24_4":
                setImagemKrunch(23);
                break;
            default:
                setImagemKrunch(0);
                break;
        }
    }

    private void setLocaisLaboratorio(String opcao) {
        switch (opcao) {
////"comunicacao", "pesquisa", "seguranca 01", "seguranca 02", "custismo"
            case "comunicacao":
                setImagemLab(1);
                break;

            case "pesquisa":
                setImagemLab(2);
                break;

            case "seguranca 01":
                setImagemLab(3);
                break;

            case "seguranca 02":
                setImagemLab(4);
                break;

            case "custismo":
                setImagemLab(5);
                break;
            default:
                setImagemLab(0);
                break;
        }
    }

    private void jButtonImgPadraoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImgPadraoActionPerformed
        if (this.gridAtual == null) {
            JOptionPane.showMessageDialog(null, "Não há imagens no GRID carregada!");
        } else {
            if (verTamanho(gridAtual, jScrollPaneImgGrid)) {
                JOptionPane.showMessageDialog(null, "A imagem no GRID é menor do que o tamanho padrão");
            } else {
                this.gridOriginal = gridAtual;

                Image imagem = getScaledImage(gridAtual.getImage(), jScrollPaneImgGrid.getWidth(), jScrollPaneImgGrid.getHeight());
                this.gridAtual = new ImageIcon(imagem);

                jLabelGridImagem.setIcon(this.gridAtual);
            }
        }
    }//GEN-LAST:event_jButtonImgPadraoActionPerformed

    private void jButtonImgOrigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImgOrigActionPerformed
        if (this.gridAtual == this.gridOriginal) {
            JOptionPane.showMessageDialog(null, "A imagem já está em tamanho original!");
        } else {
            if (this.gridOriginal != null) {
                this.gridAtual = this.gridOriginal;
                jLabelGridImagem.setIcon(this.gridAtual);
            } else {
                JOptionPane.showMessageDialog(null, "Não há imagens no GRID carregada!");
            }
        }


    }//GEN-LAST:event_jButtonImgOrigActionPerformed

    private void jComboBoxUniversoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxUniversoActionPerformed
        Integer opcao = jComboBoxUniverso.getSelectedIndex();

        switch (opcao) {
            case 0:
                jLabelUniversos.setIcon(new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Universos/Egito/Egito.jpg")));
                break;

            case 1:
                jLabelUniversos.setIcon(new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Universos/Grecia/Grecia.jpg")));
                break;

            case 2:
                jLabelUniversos.setIcon(new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Universos/WW2/Alemanha.jpg")));
                break;
        }
    }//GEN-LAST:event_jComboBoxUniversoActionPerformed

    private boolean verTamanho(ImageIcon imagem, JScrollPane jScrollImg) {

        Integer wIMG = imagem.getIconWidth();
        Integer hIMG = imagem.getIconHeight();

        Integer wPANE = jScrollImg.getWidth();
        Integer hPANE = jScrollImg.getHeight();

        if ((wIMG <= wPANE) || (hIMG <= hPANE)) {
            return true;
        }

        return false;
    }

    private Image getScaledImage(Image srcImg, int w, int h) {
        BufferedImage resizedImg = new BufferedImage(w, h, BufferedImage.TYPE_INT_ARGB);
        Graphics2D g2 = resizedImg.createGraphics();

        g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        g2.drawImage(srcImg, 0, 0, w, h, null);
        g2.dispose();

        return resizedImg;
    }

    private void setMiniatura() {
        if (this.gridAtual != null) {
            ImageIcon imagem = new ImageIcon(getScaledImage(this.gridAtual.getImage(), jScrollPaneMiniatura.getWidth(), jScrollPaneMiniatura.getHeight()));
            jLabelMiniatura.setIcon(imagem);
        }
    }

    //<editor-fold defaultstate="collapsed" desc=" LUISIDIANA ">
    //</editor-fold>
    private String[] getLocais(Integer opcao) {
        List<String> lista = new ArrayList<>();

        switch (opcao) {
            case 1:// Luisidiana
                lista.addAll(Arrays.asList("Selecione o local", "Cemiterio corvo", "Conjunto habitacional", "Especiais", "Hospicio",
                        "Igreja nova vida", "Lab Avancado", "Ponto zero", "Predio geral da Unreal", "Roma", "Vila boa morada",
                        "Cemiterios e igrejas", "Cidade", "Lojas", "Predios e casas", "Luisidiana - S26", "Luisidiana - S28", "Luisidiana - S29"));
                break;

            case 2:// Zona Florestal
                lista.addAll(Arrays.asList("Selecione o local", "Bocejo", "Caverna do pensador", "Lab norte", "Lab sul", "Outros - Zona Florestal", "S14"));
                break;

            case 3:// Kranch
                lista.addAll(Arrays.asList("Selecione o local", "A caverna", "BHC", "Centro urbano", "Circo do The Clown", "Fazenda dos Sacrificios", "Fortaleza Grey",
                        "Montanha Elevate", "Outros - Kranch", "Rancho cultistas", "Kranch - S22", "Kranch - S23", "Kranch - S24"));
                break;

            case 4:// Laboratório Geral da Unreal
                lista.addAll(Arrays.asList("Selecione o local", "C de comunicacao", "C de pesquisa", "C de seguranca", "Cultismo"));
                break;

            case 5:// Inferno da dor
                lista.addAll(Arrays.asList("Selecione o local", "Casa da tortura", "Lar do barao", "Outros - Inferno da Dor", "Predio do sofrimento", "Inferno da dor - S20", "Vale das chamas"));
                break;

            case 6:// Inferno da Solidão
                lista.addAll(Arrays.asList("Selecione o local", "Abismo Horizontal", "Casa da Perdicao", "Vale das Sombras", "Outros - Inferno da Solidão"));
                break;

            case 7: // Universos Alternativos
                lista.addAll(Arrays.asList("Selecione o local", "Egito", "Grécia", "WWII"));
                break;
        }

        String[] locais = new String[lista.size()];
        locais = lista.toArray(locais);

        return locais;
    }

    private void setImagemLuisidiana(Integer opcao) {
        ImageIcon imagem = null;
        switch (opcao) {
            case 1:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Cemiterio Corvo/Corvo 01.jpg"));
                break;

            case 2:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Cemiterio Corvo/Corvo 02.jpg"));
                break;

            case 3:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/cemiterios e igrejas/cemi 1.jpg"));
                break;

            case 4:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/cemiterios e igrejas/cemi 2.jpg"));
                break;

            case 5:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Cidade/Ruas 1.jpg"));
                break;

            case 6:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Cidade/Ruas 2.png"));
                break;

            case 7:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Cidade/Ruas 3.jpg"));
                break;

            case 8:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Cidade/Ruas 4.jpg"));
                break;

            case 9:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Cidade/Ruas 5.jpg"));
                break;

            case 10:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Cidade/Ruas 6.jpg"));
                break;

            case 11:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Conjunto habitacional/Conjunto.png"));
                break;

            case 12:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Especiais/Esgoto 1.jpg"));
                break;

            case 13:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Especiais/Subterraneo 1.jpg"));
                break;

            case 14:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Hospicio/Hospicio 1.jpg"));
                break;

            case 15:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Hospicio/Hospicio 2.jpg"));
                break;

            case 16:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Hospicio/Hospicio 3.jpg"));
                break;

            case 17:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Hospicio/Hospicio 4.jpg"));
                break;

            case 18:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Igreja Nova vida/Nova vida.jpg"));
                break;

            case 19:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Lab Avancado/Pre - rio.jpg"));
                break;

            case 20:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Lab Avancado/Rio das lagrimas.jpg"));
                break;

            case 21:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/lojas/Diner1.jpg"));
                break;

            case 22:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/lojas/Diner2.jpg"));
                break;

            case 23:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/lojas/gas1.jpg"));
                break;

            case 24:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/lojas/Junktown.jpg"));
                break;

            case 25:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/lojas/zawa.jpg"));
                break;

            case 26:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/P - 43/Prin 43.jpg"));
                break;

            case 27:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Ponto Zero/Ponto zero.png"));
                break;

            case 28:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Predio geral da Unreal/Lab subterraneo.jpg"));
                break;

            case 29:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Predios e casas/Taverna Urbana 2.jpg"));
                break;

            case 30:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Predios e casas/ware house 1.jpg"));
                break;

            case 31:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Predios e casas/ware house 2.jpg"));
                break;

            case 32:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Predios e casas/ware house 3.jpg"));
                break;

            case 33:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Predios e casas/ware house 4.jpg"));
                break;

            case 34:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Roma/Batalha por Roma.jpg"));
                break;

            case 35:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Roma/Roma.png"));
                break;

            case 36:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/S26/hospital1.jpg"));
                break;

            case 37:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/S26/hospital2.jpg"));
                break;

            case 38:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/S26/hospital3.jpg"));
                break;

            case 39:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/S28/S28_1.jpg"));
                break;

            case 40:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/S28/S28_2.jpg"));
                break;

            case 41:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/S28/S28_3.jpg"));
                break;

            case 42:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/S28/S28_4.jpg"));
                break;

            case 43:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/S29/industrial yard1.jpg"));
                break;

            case 44:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/S29/industrial yard2.jpg"));
                break;

            case 45:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/S29/industrial yard3.jpg"));
                break;

            case 46:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/S29/industrial yard4.jpg"));
                break;

            case 47:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Vila Boa morada/Vila 1.png"));
                break;

            case 48:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Luisidiana/Vila Boa morada/Vila 2.jpg"));
                break;

            default:
                imagem = null;
                break;

        }

        try {
            jLabelGridImagem.setIcon(imagem);
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Falha ao carregar imagem\n" + e.toString());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro desconhecido\n" + e.toString());
        }

        this.gridAtual = imagem;
        this.gridOriginal = imagem;
        setMiniatura();

    }

    private void setImagemFloresta(Integer opcao) {
        ImageIcon imagem = null;
        switch (opcao) {
            case 1:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Floresta/Bocejo/Bocejo 01.jpg"));
                break;

            case 2:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Floresta/Bocejo/Bocejo 02.jpg"));
                break;

            case 3:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Floresta/Bocejo/Bocejo 03.jpg"));
                break;

            case 4:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Floresta/caverna do pensador/caverna do pensador.jpg"));
                break;

            case 5:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Floresta/lab norte/ZF - Lab norte.jpg"));
                break;

            case 6:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Floresta/lab sul/ZF - Lab sul.jpg"));
                break;

            case 7:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Floresta/Outros/ZF - 01.jpg"));
                break;

            case 8:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Floresta/Outros/ZF - 02.jpg"));
                break;

            case 9:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Floresta/Outros/ZF - 03.jpg"));
                break;

            case 10:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Floresta/Outros/ZF - 04.jpg"));
                break;
            case 11:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Floresta/Outros/ZF - 05.jpg"));
                break;

            case 12:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Floresta/Outros/ZF - 06.jpg"));
                break;

            case 13:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Floresta/Outros/ZF - 07.jpg"));
                break;

            case 14:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Floresta/S14/S14.jpg"));
                break;

            default:
                imagem = null;
                break;

        }

        try {
            jLabelGridImagem.setIcon(imagem);
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Falha ao carregar imagem\n" + e.toString());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro desconhecido\n" + e.toString());
        }

        this.gridAtual = imagem;
        this.gridOriginal = imagem;
        setMiniatura();

    }

    private void setImagemUniversos(Integer opcao) {
        ImageIcon imagem = null;
        switch (opcao) {
            case 1:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Universos/Egito/Egito.jpg"));
                break;

            case 2:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Universos/Egito/Egito 01.jpg"));
                break;

            case 3:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Universos/Egito/Egito 02.jpg"));
                break;

            case 4:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Universos/Grecia/Grecia.jpg"));
                break;

            case 5:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Universos/Grecia/Grecia 01.jpg"));
                break;

            case 6:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Universos/Grecia/Grecia 02.jpg"));
                break;

            case 7:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Universos/Grecia/Grecia 03.jpg"));
                break;

            case 8:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Universos/WW2/Alemanha.jpg"));
                break;

            case 9:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Universos/WW2/WW2_01.png"));
                break;

            case 10:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Universos/WW2/WW2_02.png"));
                break;

            case 11:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Universos/WW2/WW2_03.jpg"));
                break;

            default:
                imagem = null;
                break;

        }

        try {
            jLabelGridImagem.setIcon(imagem);
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Falha ao carregar imagem\n" + e.toString());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro desconhecido\n" + e.toString());
        }

        this.gridAtual = imagem;
        this.gridOriginal = imagem;
        setMiniatura();

    }

    private void setImagemInfernoDor(Integer opcao) {
        ImageIcon imagem = null;
        switch (opcao) {
            case 1:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Infernos/Dor/Casa da tortura/casa da tortura.jpg"));
                break;

            case 2:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Infernos/Dor/Lar do barao/lar do barao.png"));
                break;

            case 3:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Infernos/Dor/Outros/ID - outros.jpg"));
                break;

            case 4:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Infernos/Dor/Predio do sofrimento/predio do sofrimento.jpg"));
                break;

            case 5:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Infernos/Dor/S20/S20.jpg"));
                break;

            case 6:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Infernos/Dor/Vale das chamas/vale das chamas.jpg"));
                break;

            default:
                imagem = null;
                break;

        }

        try {
            jLabelGridImagem.setIcon(imagem);
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Falha ao carregar imagem\n" + e.toString());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro desconhecido\n" + e.toString());
        }

        this.gridAtual = imagem;
        this.gridOriginal = imagem;
        setMiniatura();

    }

    private void setImagemInfernoSolidao(Integer opcao) {
        ImageIcon imagem = null;
        switch (opcao) {
            case 1:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Infernos/Solidao/Abismo Horizontal/abismo horizontal.jpg"));
                break;

            case 2:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Infernos/Solidao/Casa da Perdicao/casa da perdicao.jpg"));
                break;

            case 3:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Infernos/Solidao/Outros/IS - outros 01.jpg"));
                break;

            case 4:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Infernos/Solidao/Outros/IS - outros 02.png"));
                break;

            case 5:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Infernos/Solidao/Vale das Sombras/vale das sombras 01.jpg"));
                break;

            case 6:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Infernos/Solidao/Vale das Sombras/vale das sombras 02.jpg"));
                break;

            default:
                imagem = null;
                break;

        }

        try {
            jLabelGridImagem.setIcon(imagem);
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Falha ao carregar imagem\n" + e.toString());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro desconhecido\n" + e.toString());
        }

        this.gridAtual = imagem;
        this.gridOriginal = imagem;
        setMiniatura();

    }

    private void setImagemKrunch(Integer opcao) {
        ImageIcon imagem = null;
        switch (opcao) {
            case 1:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/A caverna/caverna 01.jpg"));
                break;

            case 2:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/A caverna/caverna 02.jpg"));
                break;

            case 3:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/BHC/BHC.jpg"));
                break;

            case 4:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/Centro urbano/kranch.jpg"));
                break;

            case 5:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/Circo/circo.jpg"));
                break;

            case 6:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/Circo/circo prisao.jpg"));
                break;

            case 7:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/Fazenda dos Sacrificios/fazenda sacrificios.jpg"));
                break;

            case 8:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/Fortaleza Grey/FG 01.jpg"));
                break;

            case 9:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/Fortaleza Grey/FG 02.jpg"));
                break;

            case 10:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/Fortaleza Grey/FG 03.jpg"));
                break;

            case 11:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/Fortaleza Grey/FG 04.jpg"));
                break;

            case 12:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/Montanha Elevate/montanha.jpg"));
                break;

            case 13:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/Montanha Elevate/Reanimador Fight.jpg"));
                break;

            case 14:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/Outros/Kranch - Outros 01.jpg"));
                break;

            case 15:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/Outros/Kranch - Outros 02.jpg"));
                break;

            case 16:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/Rancho cultistas/rancho dos cultistas.jpg"));
                break;

            case 17:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/S22/S22_1.jpg"));
                break;

            case 18:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/S22/S22_2.jpg"));
                break;

            case 19:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/S23/S23.jpg"));
                break;

            case 20:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/S24/S24_1.jpg"));
                break;

            case 21:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/S24/S24_2.jpg"));
                break;

            case 22:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/S24/S24_3.jpg"));
                break;

            case 23:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Kranch/S24/S24_4.jpg"));
                break;

            default:
                imagem = null;
                break;

        }

        try {
            jLabelGridImagem.setIcon(imagem);
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Falha ao carregar imagem\n" + e.toString());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro desconhecido\n" + e.toString());
        }

        this.gridAtual = imagem;
        this.gridOriginal = imagem;
        setMiniatura();

    }

    private void setImagemLab(Integer opcao) {
        ImageIcon imagem = null;
        switch (opcao) {
            case 1:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Laboratorio/C de comunicacao/comunicacao.jpg"));
                break;

            case 2:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Laboratorio/C de pesquisa/pesquisa.jpg"));
                break;

            case 3:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Laboratorio/C de seguranca/seguranca 01.jpg"));
                break;

            case 4:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Laboratorio/C de seguranca/seguranca 02.jpg"));
                break;

            case 5:
                imagem = new ImageIcon(ClassLoader.getSystemResource("rpg2/Imagens/Laboratorio/Cultismo/custismo.jpg"));
                break;

            default:
                imagem = null;
                break;

        }

        try {
            jLabelGridImagem.setIcon(imagem);
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Falha ao carregar imagem\n" + e.toString());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro desconhecido\n" + e.toString());
        }

        this.gridAtual = imagem;
        this.gridOriginal = imagem;
        setMiniatura();

    }

    private String[] getOpcoes(Integer opcao) {
        List<String> lista = new ArrayList<>();

        switch (opcao) {

        }

        String[] locais = new String[lista.size()];
        locais = lista.toArray(locais);

        return locais;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MapaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MapaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MapaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MapaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MapaView().setVisible(true);
            }
        });
    }

    //<editor-fold defaultstate="collapsed" desc=" VAR ">

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonImgOrig;
    private javax.swing.JButton jButtonImgPadrao;
    private javax.swing.JComboBox<String> jComboBoxGridLocal;
    private javax.swing.JComboBox<String> jComboBoxGridMapa;
    private javax.swing.JComboBox<String> jComboBoxGridsOpcao;
    private javax.swing.JComboBox<String> jComboBoxUniverso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelGridImagem;
    private static javax.swing.JLabel jLabelImagemInfernoDor;
    private static javax.swing.JLabel jLabelImagemInfernoSolidao;
    private javax.swing.JLabel jLabelImagemKranch;
    private static javax.swing.JLabel jLabelImagemLab;
    private javax.swing.JLabel jLabelImagemLuisidiana;
    private javax.swing.JLabel jLabelImagemMapaCompleto;
    private javax.swing.JLabel jLabelImagemZonaFlorestal;
    private javax.swing.JLabel jLabelMiniatura;
    private javax.swing.JLabel jLabelUniversos;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuCreditos;
    private javax.swing.JMenu jMenuInfernoDor;
    private javax.swing.JMenu jMenuInfernoSolidao;
    private javax.swing.JMenu jMenuKranch;
    private javax.swing.JMenu jMenuLaboratorio;
    private javax.swing.JMenu jMenuLegendas;
    private javax.swing.JMenu jMenuLuisidiana;
    private javax.swing.JMenu jMenuSecundaria;
    private javax.swing.JMenu jMenuVoltar;
    private javax.swing.JMenu jMenuZonaFlorestal;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelGrids;
    private javax.swing.JPanel jPanelInfernoDor;
    private javax.swing.JPanel jPanelInfernoSolidao;
    private javax.swing.JPanel jPanelLaboratorio;
    private javax.swing.JPanel jPanelMapaCompleto;
    private javax.swing.JPanel jPanelMapaKranch;
    private javax.swing.JPanel jPanelMapaLuisidiana;
    private javax.swing.JPanel jPanelMapaZonaFlorestal;
    private javax.swing.JPanel jPanelUniversos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPaneImgGrid;
    private javax.swing.JScrollPane jScrollPaneMiniatura;
    private javax.swing.JScrollPane jScrollPaneUniverso;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToggleButton jToggleButtonAlternar;
    // End of variables declaration//GEN-END:variables
//</editor-fold>
}
